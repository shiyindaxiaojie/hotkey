<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.platform.hotkey.dashboard.biz.mapper.KeyRecordMapper">
  <resultMap id="BaseResultMap" type="com.jd.platform.hotkey.dashboard.model.KeyRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="key_name" jdbcType="VARCHAR" property="key" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="val" jdbcType="VARCHAR" property="val" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="duration" jdbcType="BIGINT" property="duration" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, key_name, app_name, val, duration,source,type,create_time,uuid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from hk_key_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hk_key_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.jd.platform.hotkey.dashboard.model.KeyRecord">
    insert ignore into hk_key_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="key != null">
        key_name,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="val != null">
        val,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="duration != null">
        duration,
      </if>
     <if test="rule != null">
        rule,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="val != null">
        #{val,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=BIGINT},
      </if>
      <if test="rule != null">
        #{rule,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPk" parameterType="com.jd.platform.hotkey.dashboard.model.KeyRecord">
    update hk_key_record
    <set>
      <if test="key != null">
        key_name = #{key,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="val != null">
        val = #{val,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="listKeyRecord"  resultMap="BaseResultMap"  parameterType="com.jd.platform.hotkey.dashboard.common.domain.req.SearchReq">
    select
    <include refid="Base_Column_List" />
    from hk_key_record
    where 1=1
    <if test="app !=null and app !=''">
      and app_name = #{app}
    </if >
    <if test="key !=null and key !=''">
      and key_name LIKE CONCAT(CONCAT('%', #{key}), '%')
    </if >
    <if test="startTime != null">
      <![CDATA[ and create_time >= #{startTime} and create_time < #{endTime}]]>
    </if>
    order by id desc
  </select>



  <select id="countKeyRecord"  resultType="java.lang.Integer"  parameterType="com.jd.platform.hotkey.dashboard.common.domain.req.SearchReq">
    select count(1)
    from hk_key_record
    where 1=1
    <if test="app !=null and app !=''">
      and app_name = #{app}
    </if >
    <if test="startTime != null">
      <![CDATA[ and create_time >= #{startTime} and create_time < #{endTime}]]>
    </if>
  </select>


  <insert id="batchInsert">
    INSERT ignore INTO
    hk_key_record(
    key_name,
    val,
    app_name,
    duration,
    source,
    type,
    create_time,
    uuid)
    VALUES
    <foreach collection="list" item="k" separator=",">
      (#{k.key},
      #{k.val},
      #{k.appName},
      #{k.duration},
      #{k.source},
      #{k.type},
      #{k.createTime},
      #{k.uuid})
    </foreach>
  </insert>


  <select id="maxHotKey"  resultType="com.jd.platform.hotkey.dashboard.model.Statistics">
    select key_name as keyName, count(1) as count , app_name as app
    from hk_key_record
    where type = 0
    <if test="app !=null and app !=''">
      and app_name = #{app}
    </if >
    <if test="key !=null and key !=''">
      and key_name = #{key}
    </if >
    <if test="startTime != null">
      <![CDATA[ and create_time >= #{startTime} and create_time < #{endTime}]]>
    </if>
    GROUP BY app_name, key_name ORDER BY count desc limit 100
  </select>



  <select id="statisticsByRule"  resultType="com.jd.platform.hotkey.dashboard.model.Statistics">
    select t.*, h.rule from (

    select max(id) as id, count(1) as count, app_name as app, val as keyName
    from hk_key_record
    where type = 0
    <if test="app !=null and app !=''">
      and app_name = #{app}
    </if>
    <if test="key !=null and key !=''">
      and key_name = #{key}
    </if>
    <if test="startTime != null">
      <![CDATA[ and create_time >= #{startTime} and create_time < #{endTime}]]>
    </if>
    GROUP BY app_name, val order by null

    ) t JOIN hk_key_record h on t.id = h.id
  </select>


  <delete id="clearExpireData">
    delete from hk_key_record
    where app_name = #{app}
     <![CDATA[ and create_time < #{expireDate}]]>
  </delete>

</mapper>